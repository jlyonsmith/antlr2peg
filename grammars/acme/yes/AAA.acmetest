import $AS_PROJECT_PATH\families\MDSFamily.acme;

Family ClientAndServerFam = {
  Component Type ClientT = {
    Port sendRequest : ClientPortT    = new ClientPortT;    
  }  
   
  Component Type ServerT = {                   
    Property max-concurrent-requests : int;
    Property vis-y : float = 215.0;
  }
  
  invariant Forall c1 : component in self.components | 
        Forall c2 : component in self.components | 
            connected(c1, c2) -> (declaresType(c1, ClientT) AND declaresType(c2, ServerT)) OR (declaresType(c1, ServerT) AND declaresType(c2, ClientT))  <<label : string = "All pairs of connected components are ClientTwith ServerT.";errMsg : string = "Detected pair(s) of components that falis the ClientT with ServerT constraint!";>>;
   
  invariant Forall c : connector in self.connectors | 
    declaresType(c, interLayerRequestT) AND satisfiesType(c, interLayerRequestT) ;
    
  analysis mustBeOfType(types : set {type}) : boolean =
    Exists t in types | 
      declaresType(e, t) ;
      
  analysis numberOfPorts(c : component, t : type) : int =
    size(portsOfType(c, t));
    
  analysis R1A-actuatorCmdSubPorts_conn_sameController(sys : system) : boolean =
    (Forall compA :! ActuatorT in sys.Components | 
      (numberOfPorts(compA, CommandSubmitProvPortT) > 1) -> (Exists Unique compC :! ControllerT in sys.components | 
      connected(compA, compC)) ) ;
           
}
